Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Name and Stage"
        Parameters:
          - ProjectName
          - Stage

      - Label:
          default: "Frontend parameters"
        Parameters:
          - GitHubFrontendRepositoryURL
          - GitHubFrontEndBranch

    ParameterLabels:
      ProjectName:
        default: Project Name
      Stage:
        default: Stage

Parameters:
  # Common parameters
  ProjectName:
    Type: String
    Default: hedwig
    Description: "Enter the project name. This will also be the name of the s3 bucket that contains the build and deploy artifacts, therefore it must be a valid bucket name with only lowercase letters, numbers, periods (.), and dashes (-)."
  Stage:
    Type: String
    AllowedValues: [develop, test, production, release]
  GitHubFrontEndBranch:
    Type: String
    Default: develop
  GitHubFrontendRepositoryURL:
    Type: String
    Default: "https://github.com/ZiadAliKhalifa/Hedwig-Frontend"

Resources:
  # Frontend resources
  DeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketName: !Join ["-", [!Ref ProjectName, !Ref Stage, "bucket"]]
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  DeploymentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DeploymentBucket
      PolicyDocument:
        Statement:
          - Sid: "PublicReadGetObject"
            Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Ref: "DeploymentBucket"
                  - "/*"
            Principal: "*"

  CodeBuildCIServiceRoleFrontend:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - "-"
        - - !Ref ProjectName
          - !Ref Stage
          - !Ref "AWS::Region"
          - "ui-CI-codebuild-role"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                  - secretsmanager:*

  CodeBuildCIFrontend:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join ["-", [!Ref ProjectName, !Ref Stage, "ui", "CI"]]
      Artifacts:
        Type: NO_ARTIFACTS
      Source:
        Auth:
          Type: OAUTH
        Location: !Ref GitHubFrontendRepositoryURL
        ReportBuildStatus: true
        Type: GITHUB
        BuildSpec: buildspec_ci.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.14.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: REACT_APP_ENV
            Value: !Ref Stage
      ServiceRole: !Ref CodeBuildCIServiceRoleFrontend
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED,PULL_REQUEST_REOPENED
            - Type: BASE_REF
              Pattern: !Sub "^refs/heads/${GitHubFrontEndBranch}$"
              ExcludeMatchedPattern: false
        Webhook: true

  CodeBuildCICDServiceRoleFrontend:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - "-"
        - - !Ref ProjectName
          - !Ref Stage
          - !Ref "AWS::Region"
          - "ui-CICD-codebuild-role"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                  - s3:PutAccountPublicAccessBlock
                  - s3:GetAccountPublicAccessBlock
                  - s3:ListAllMyBuckets
                  - s3:ListJobs
                  - s3:CreateJob
                  - s3:HeadBucket
                  - s3:ListObjectsV2
                  - secretsmanager:*
              - Action:
                  - s3:*
                Effect: Allow
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucket}
                  - arn:aws:s3:::*/*

  CodeBuildCICDFrontend:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join ["-", [!Ref ProjectName, !Ref Stage, "ui", "CICD"]]
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: true
      Source:
        Auth:
          Type: OAUTH
        Location: !Ref GitHubFrontendRepositoryURL
        ReportBuildStatus: true
        Type: GITHUB
        BuildSpec: buildspec_cd.yml
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/nodejs:10.14.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Ref DeploymentBucket
          - Name: REACT_APP_ENV
            Value: !Ref Stage
      ServiceRole: !Ref CodeBuildCICDServiceRoleFrontend
      Triggers:
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: !Sub "^refs/heads/${GitHubFrontEndBranch}$"
              ExcludeMatchedPattern: false
        Webhook: true
